<!DOCTYPE html>
<html style=""><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<title>Leaflet mobile example</title>

	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

	<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css" />

	<script src="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.js"></script>

	<style>
		body {
			padding: 0;
			margin: 0;
		}
		html, body, #map {
			height: 100%;
		}
	</style>
</head>
<body>
	<div id="map"></div>

	<script>
		//var map = L.map('map').setView([38.45359, 27.25193], 15);
		var cloudmadeUrl = 'http://{s}.tile.cloudmade.com/d4fc77ea4a63471cab2423e66626cbb6/{styleId}/256/{z}/{x}/{y}.png',
			cloudmadeAttribution = 'Map data &copy; 2011 OpenStreetMap contributors, Imagery &copy; 2011 CloudMade';
		var minimal   = L.tileLayer(cloudmadeUrl, {styleId: 998, attribution: cloudmadeAttribution});
		//var googleLayer = new L.Google('HYBRID');
		var OpenCycleMap = L.tileLayer('http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>'
			});
		var Nokia_satelliteYesLabelsDay = L.tileLayer('http://{s}.maptile.lbs.ovi.com/maptiler/v2/maptile/newest/hybrid.day/{z}/{x}/{y}/256/png8?token={devID}&app_id={appID}', {
			attribution: 'Map &copy; <a href="http://developer.here.com">Nokia</a>, Data &copy; NAVTEQ 2012',
			subdomains: '1234',
			devID: 'xyz',
			appID: 'abc'
		});
		
		
		
		
		var map = L.map('map', {
					layers: [minimal, OpenCycleMap, Nokia_satelliteYesLabelsDay]
				});
		map.addControl(new L.Control.Layers({'OSM':minimal, 
		'OpenCycleMap': OpenCycleMap, 'Nokia_satelliteYesLabelsDay': Nokia_satelliteYesLabelsDay}))

		var marker_icon = L.icon({
				iconUrl: 'markers/number_5.png',
				popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
			});
		L.marker([38.41886, 27.13009], {icon: marker_icon}).addTo(map);	
		
		function onLocationFound(e) {
			var radius = e.accuracy / 2;

			L.marker(e.latlng).addTo(map)
				.bindPopup("You are within " + radius + " meters from this point").openPopup();

			L.circle(e.latlng, radius).addTo(map);
		}

		function onLocationError(e) {
			alert(e.message);
		}

		map.on('locationfound', onLocationFound);
		map.on('locationerror', onLocationError);

		map.locate({setView: true, maxZoom: 16});
	</script>


</body></html>